{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","key","document","addEventListener","event","setState","removeEventListener","className","this","Component","ReactDOM","render","getElementById"],"mappings":"2MAEaA,EAAb,4MACEC,MAAoC,CAClCC,IAAK,IAFT,uDAKE,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,SAAS,SAACC,GAClC,EAAKC,SAAS,CACZJ,IAAKG,EAAMH,WARnB,kCAaE,WAAwB,IAAD,OACrBC,SAASI,oBAAoB,SAAS,SAACF,GACrC,EAAKC,SAAS,CACZJ,IAAKG,EAAMH,WAhBnB,oBAqBE,WACE,OACE,qBAAKM,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAEIC,KAAKR,MAAMC,IAAX,mCACgCO,KAAKR,MAAMC,IAD3C,KAEI,kCA5BhB,GAAyBQ,a,MCGzBC,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.68a9312b.chunk.js","sourcesContent":["import { Component, ReactNode } from 'react';\n\nexport class App extends Component {\n  state: Readonly<{ key?: string }> = {\n    key: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', (event: KeyboardEvent) => {\n      this.setState({\n        key: event.key,\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', (event: KeyboardEvent) => {\n      this.setState({\n        key: event.key,\n      });\n    });\n  }\n\n  render(): ReactNode {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {\n            this.state.key\n              ? `The last pressed key is [${this.state.key}]`\n              : 'Nothing was pressed yet'\n          }\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}